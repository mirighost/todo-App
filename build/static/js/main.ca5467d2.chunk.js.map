{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca5467d2.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange} />\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted,\r\n            onToggleImportant,\r\n            onToggleDone,\r\n            important,\r\n            done } = this.props; // props\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        };\r\n        if (important) {\r\n            classNames += ' important'\r\n        };\r\n\r\n        return (\r\n            <span className={classNames}>\r\n\r\n                {/* lists */}\r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    onClick={onToggleDone} >\r\n                    {label}\r\n                </span>\r\n\r\n                {/* buttons */}\r\n                <button onClick={onToggleImportant} type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right right-button\">\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n\r\n                <button onClick={onDeleted}\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right left-button\">\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    };\r\n};","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const elements = todos.map((item) => {\r\n\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleDone={() => onToggleDone(id)} />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n  ];\r\n\r\n  render() {\r\n\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n      return (\r\n        <button type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)} >\r\n          {label}\r\n        </button>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  };\r\n};","import ItemAddForm from \"./item-add-form\";\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                onSubmit={this.onSubmit} >\r\n\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"What needs to be done?\"\r\n                    value={this.state.label} />\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary input-button\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header/index';\r\nimport SearchPanel from '../search-panel/index';\r\nimport TodoList from '../todo-list/index';\r\nimport ItemStatusFilter from '../item-status-filter/index';\r\nimport ItemAddForm from \"../item-add-form/index\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    // id of items\r\n    maxId = 100;\r\n\r\n    // items\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"Drink Coffee\"),\r\n            this.createTodoItem(\"Build Awesome App\"),\r\n            this.createTodoItem(\"Have a lunch\"),\r\n        ],\r\n        term: '',\r\n        filter: 'all' // active, done. all\r\n    };\r\n\r\n    // create Item \r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const before = todoData.slice(0, idx); // elements in the left of deleted\r\n            const after = todoData.slice(idx + 1); // elemetns in the right of deleted\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    // add item via button\r\n    addItem = (text) => {\r\n        let newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx), // elements in the left of deleted\r\n            newItem,\r\n            ...arr.slice(idx + 1), // elemetns in the right of deleted\r\n        ];\r\n    };\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    // search panel\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        };\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    // filter panel\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            < div className=\"todo-app\" >\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange} />\r\n                </div>\r\n                <TodoList\r\n                    todos={visibleItems}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone} />\r\n                <ItemAddForm\r\n                    onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/index';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);"],"sourceRoot":""}