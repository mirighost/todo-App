{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miri\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header/index';\nimport SearchPanel from '../search-panel/index';\nimport TodoList from '../todo-list/index';\nimport ItemStatusFilter from '../item-status-filter/index';\nimport ItemAddForm from \"../item-add-form/index\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem(\"Drink Coffee\"), this.createTodoItem(\"Build Awesome App\"), this.createTodoItem(\"Have a lunch\")],\n      term: ''\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const before = todoData.slice(0, idx); // elements in the left of deleted\n\n        const after = todoData.slice(idx + 1); // elemetns in the right of deleted\n\n        const newArray = [...before, ...after];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      let newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n  }\n\n  // create Item \n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem,\n      [propName]: !oldItem[propName]\n    };\n    return [...arr.slice(0, idx), // elements in the left of deleted\n    newItem, ...arr.slice(idx + 1) // elemetns in the right of deleted\n    ];\n  }\n\n  render() {\n    const {\n      todoData,\n      term\n    } = this.state;\n    const visibleItems = this.search(todoData, term);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: todoData,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(ItemAddForm, {\n      onItemAdded: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Miri/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","App","maxId","state","todoData","createTodoItem","term","deleteItem","id","setState","idx","findIndex","el","before","slice","after","newArray","addItem","text","newItem","newArr","onToggleImportant","toggleProperty","onToggleDone","label","important","done","arr","propName","oldItem","render","visibleItems","search","doneCount","filter","length","todoCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header/index';\r\nimport SearchPanel from '../search-panel/index';\r\nimport TodoList from '../todo-list/index';\r\nimport ItemStatusFilter from '../item-status-filter/index';\r\nimport ItemAddForm from \"../item-add-form/index\";\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    // id of items\r\n    maxId = 100;\r\n\r\n    // items\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"Drink Coffee\"),\r\n            this.createTodoItem(\"Build Awesome App\"),\r\n            this.createTodoItem(\"Have a lunch\"),\r\n        ],\r\n\r\n        term: ''\r\n    };\r\n\r\n    // create Item \r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const before = todoData.slice(0, idx); // elements in the left of deleted\r\n            const after = todoData.slice(idx + 1); // elemetns in the right of deleted\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    // add item via button\r\n    addItem = (text) => {\r\n        let newItem = this.createTodoItem(text)\r\n\r\n        this.setState(({ todoData }) => {\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return {\r\n                todoData: newArr\r\n            };\r\n        })\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n        \r\n        return [\r\n            ...arr.slice(0, idx), // elements in the left of deleted\r\n            newItem,\r\n            ...arr.slice(idx + 1), // elemetns in the right of deleted\r\n        ]\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        })\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { todoData, term } = this.state;\r\n\r\n        const visibleItems = this.search(todoData, term);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            < div className=\"todo-app\" >\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel />\r\n                    <ItemStatusFilter />\r\n                </div>\r\n                <TodoList\r\n                    todos={todoData}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone} />\r\n                <ItemAddForm\r\n                    onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}