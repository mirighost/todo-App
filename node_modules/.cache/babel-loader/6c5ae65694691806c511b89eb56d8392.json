{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miri\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header/index';\nimport SearchPanel from '../search-panel/index';\nimport TodoList from '../todo-list/index';\nimport ItemStatusFilter from '../item-status-filter/index';\nimport ItemAddForm from \"../item-add-form/index\";\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem(\"csad\"), {\n        label: 'Drink Coffee',\n        important: false,\n        id: 1\n      }, {\n        label: 'Build Awesome App',\n        important: true,\n        id: 2\n      }, {\n        label: 'Have a lunch',\n        important: false,\n        id: 3\n      }]\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const before = todoData.slice(0, idx); // elements in the left of deleted\n\n        const after = todoData.slice(idx + 1); // elemetns in the right of deleted\n\n        const newArray = [...before, ...after];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      console.log(id);\n    };\n\n    this.onToggleDone = id => {\n      console.log(id);\n    };\n  }\n\n  // create Item\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: 1,\n      done: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: this.state.todoData,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(ItemAddForm, {\n      onItemAdded: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Miri/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","App","maxId","state","todoData","createTodoItem","label","important","id","deleteItem","setState","idx","findIndex","el","before","slice","after","newArray","onToggleImportant","console","log","onToggleDone","done","render","addItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport AppHeader from '../app-header/index'\r\nimport SearchPanel from '../search-panel/index'\r\nimport TodoList from '../todo-list/index'\r\nimport ItemStatusFilter from '../item-status-filter/index';\r\nimport ItemAddForm from \"../item-add-form/index\"\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    // id of items\r\n    maxId = 100;\r\n\r\n    // items\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"csad\"),\r\n            { label: 'Drink Coffee', important: false, id: 1 },\r\n            { label: 'Build Awesome App', important: true, id: 2 },\r\n            { label: 'Have a lunch', important: false, id: 3 }\r\n        ]\r\n    };\r\n\r\n    // create Item\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const before = todoData.slice(0, idx); // elements in the left of deleted\r\n            const after = todoData.slice(idx + 1); // elemetns in the right of deleted\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    // addItem = (text) => {\r\n    //     let newItem = {\r\n    //         label: text,\r\n    //         important: false,\r\n    //         id: this.maxId++\r\n    //     }\r\n\r\n    //     this.setState(({ todoData }) => {\r\n    //         const newArr = [\r\n    //             ...todoData,\r\n    //             newItem\r\n    //         ];\r\n    //         return {\r\n    //             todoData: newArr\r\n    //         };\r\n    //     })\r\n    // };\r\n\r\n    onToggleImportant = (id) => {\r\n        console.log(id)\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        console.log(id)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todo-app\" >\r\n                <AppHeader toDo={1} done={3} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel />\r\n                    <ItemStatusFilter />\r\n                </div>\r\n                <TodoList\r\n                    todos={this.state.todoData}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone} />\r\n                <ItemAddForm\r\n                    onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}